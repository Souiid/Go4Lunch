[versions]
agp = "8.3.1"
browser = "1.8.0"
compilerVersion = "4.12.0"
converterGson = "2.9.0"
coreTesting = "2.2.0"
dagger = "2.48.1"
espressoIntents = "3.5.1"
espressoContrib = "3.5.1"
facebookAndroidSdk = "5.0.0"
firebaseBom = "33.1.0"
firebaseUiAuth = "7.2.0"
fragmentKtx = "1.8.3"
glideVersion = "4.12.0"
gson = "2.10.1"
junit = "4.13.2"
junitVersion = "1.1.5"
espressoCore = "3.5.1"
appcompat = "1.7.0"
material = "1.12.0"
activity = "1.8.0"
constraintlayout = "2.1.4"
mockitoAndroid = "4.8.0"
mockitoCore = "5.11.0"
mockitoInline = "5.2.0"
okhttp = "4.9.1"
places = "2.6.0"
playServicesLocation = "21.3.0"
playServicesMaps = "19.0.0"
powermockApiMockito2 = "2.0.9"
powermockClassloadingXstream = "2.0.9"
powermockModuleJunit4 = "2.0.9"
retrofit = "2.9.0"
core = "1.5.0"
robolectric = "4.11.1"
rules = "1.5.0"

[libraries]
browser = { module = "androidx.browser:browser", version.ref = "browser" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }
core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-android-processor = { module = "com.google.dagger:dagger-android-processor", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "espressoContrib" }
espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espressoIntents" }
facebook-android-sdk = { module = "com.facebook.android:facebook-android-sdk", version.ref = "facebookAndroidSdk" }
firebase-auth = { module = "com.google.firebase:firebase-auth" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-firestore = { module = "com.google.firebase:firebase-firestore" }
firebase-ui-auth = { module = "com.firebaseui:firebase-ui-auth", version.ref = "firebaseUiAuth" }
fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
github-glide = { module = "com.github.bumptech.glide:glide", version.ref = "glideVersion" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "compilerVersion" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockitoAndroid" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockitoInline" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
places = { module = "com.google.android.libraries.places:places", version.ref = "places" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }
powermock-classloading-xstream = { module = "org.powermock:powermock-classloading-xstream", version.ref = "powermockClassloadingXstream" }
powermock-module-junit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "powermockModuleJunit4" }
powermock-api-mockito2 = { module = "org.powermock:powermock-api-mockito2", version.ref = "powermockApiMockito2" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
core = { group = "androidx.test", name = "core", version.ref = "core" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
rules = { module = "androidx.test:rules", version.ref = "rules" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }

